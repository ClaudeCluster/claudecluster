version: '3.8'

services:
  # MCP Server - Coordinates task routing
  mcp-server:
    build:
      context: .
      dockerfile: ./packages/mcp/Dockerfile
    ports:
      - "3100:3100"
    environment:
      - NODE_ENV=development
      - PORT=3100
      - HOST=0.0.0.0
      - DRIVER_URL=http://driver:3002
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY:-}
    networks:
      - claudecluster-network
    depends_on:
      - driver
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Driver - Orchestrates task execution
  driver:
    build:
      context: .
      dockerfile: ./packages/driver/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - HOST=0.0.0.0
      - WORKER_URLS=http://worker1:3001,http://worker2:3003
    networks:
      - claudecluster-network
    depends_on:
      - worker1
      - worker2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Worker 1 - Executes tasks
  worker1:
    build:
      context: .
      dockerfile: ./packages/worker/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - HOST=0.0.0.0
      - WORKER_ID=worker-1
      - WORKER_NAME=Worker 1
      - DRIVER_URL=http://driver:3002
      - CLAUDE_CODE_PATH=/usr/local/bin/node
    volumes:
      - worker1-workspace:/app/workspace
      - worker1-logs:/app/logs
    networks:
      - claudecluster-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Worker 2 - Executes tasks
  worker2:
    build:
      context: .
      dockerfile: ./packages/worker/Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - HOST=0.0.0.0
      - WORKER_ID=worker-2
      - WORKER_NAME=Worker 2
      - DRIVER_URL=http://driver:3002
      - CLAUDE_CODE_PATH=/usr/local/bin/node
    volumes:
      - worker2-workspace:/app/workspace
      - worker2-logs:/app/logs
    networks:
      - claudecluster-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis (optional) - For shared state and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - claudecluster-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - claudecluster-network
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - claudecluster-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

networks:
  claudecluster-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  worker1-workspace:
    driver: local
  worker2-workspace:
    driver: local
  worker1-logs:
    driver: local
  worker2-logs:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local